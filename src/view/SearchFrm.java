/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;


import java.util.Collections;
import java.util.Date;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import model.Ceramic;
import model.DanhSachQuanLy;
import model.DateOldestComparator;
import model.Electronic;
import model.Food;
import model.PriceIncreaseComparator;
import model.Stuff;
import model.TypeDComparator;

/**
 *
 * @author HnivGnauq
 */
public class SearchFrm extends javax.swing.JFrame {
    private int selectedIndex;
    private long min = 0, max = 0;
    private DefaultTableModel tblModel;
    private Date oldDate = null, lastDate = null;
    /**
     * Creates new form SearchFrm
     */
    public SearchFrm() {
        initComponents();
        setLocationRelativeTo(null);
        tblModel = (DefaultTableModel) showTbl.getModel();
        DefaultTableCellRenderer rightRenderer = new DefaultTableCellRenderer();
        rightRenderer.setHorizontalAlignment(JLabel.RIGHT);
        showTbl.getColumnModel().getColumn(2).setCellRenderer(rightRenderer);
        showTbl.getColumnModel().getColumn(3).setCellRenderer(rightRenderer);
        showTbl.getColumnModel().getColumn(4).setCellRenderer(rightRenderer);
        showTbl.getColumnModel().getColumn(5).setCellRenderer(rightRenderer);
        fillToTable(min, max);
    }
    
    public SearchFrm(long min, long max) {
        initComponents();
        setLocationRelativeTo(null);
        tblModel = (DefaultTableModel) showTbl.getModel();
        DefaultTableCellRenderer rightRenderer = new DefaultTableCellRenderer();
        rightRenderer.setHorizontalAlignment(JLabel.RIGHT);
        showTbl.getColumnModel().getColumn(2).setCellRenderer(rightRenderer);
        showTbl.getColumnModel().getColumn(3).setCellRenderer(rightRenderer);
        showTbl.getColumnModel().getColumn(4).setCellRenderer(rightRenderer);
        showTbl.getColumnModel().getColumn(5).setCellRenderer(rightRenderer);
        this.min = min;
        this.max = max;
        Collections.sort(DanhSachQuanLy.list, new PriceIncreaseComparator());
        fillToTable(min, max);
    }
    
    public SearchFrm(Date old, Date last) {
        initComponents();
        setLocationRelativeTo(null);
        tblModel = (DefaultTableModel) showTbl.getModel();
        DefaultTableCellRenderer rightRenderer = new DefaultTableCellRenderer();
        rightRenderer.setHorizontalAlignment(JLabel.RIGHT);
        showTbl.getColumnModel().getColumn(2).setCellRenderer(rightRenderer);
        showTbl.getColumnModel().getColumn(3).setCellRenderer(rightRenderer);
        showTbl.getColumnModel().getColumn(4).setCellRenderer(rightRenderer);
        showTbl.getColumnModel().getColumn(5).setCellRenderer(rightRenderer);
        this.oldDate = old;
        this.lastDate = last;
        Collections.sort(DanhSachQuanLy.list, new DateOldestComparator());
        fillToTable(oldDate, lastDate);
    }
    
    public SearchFrm(String type) {
        initComponents();
        setLocationRelativeTo(null);
        tblModel = (DefaultTableModel) showTbl.getModel();
        DefaultTableCellRenderer rightRenderer = new DefaultTableCellRenderer();
        rightRenderer.setHorizontalAlignment(JLabel.RIGHT);
        showTbl.getColumnModel().getColumn(2).setCellRenderer(rightRenderer);
        showTbl.getColumnModel().getColumn(3).setCellRenderer(rightRenderer);
        showTbl.getColumnModel().getColumn(4).setCellRenderer(rightRenderer);
        showTbl.getColumnModel().getColumn(5).setCellRenderer(rightRenderer);
        Collections.sort(DanhSachQuanLy.list, new TypeDComparator());
        switch (type) {
            case "Thực phẩm":
                fillFoodToTable();
                break;
            case "Sành sứ":
                fillCeramicToTable();
                break;
            case "Đồ điện tử":
                fillElectronicToTable();
                break;
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        editBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();
        exportBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        showTbl = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        editBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/Actions-document-edit-icon-16.png"))); // NOI18N
        editBtn.setText("Chỉnh sửa");
        editBtn.setPreferredSize(new java.awt.Dimension(105, 30));
        editBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editBtnActionPerformed(evt);
            }
        });

        backBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/Home-icon-16.png"))); // NOI18N
        backBtn.setText("Quay lại");
        backBtn.setPreferredSize(new java.awt.Dimension(105, 30));
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        exportBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/open-file-icon-16.png"))); // NOI18N
        exportBtn.setText("Xuất kho");
        exportBtn.setPreferredSize(new java.awt.Dimension(105, 30));
        exportBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportBtnActionPerformed(evt);
            }
        });

        deleteBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/Actions-edit-delete-icon-16.png"))); // NOI18N
        deleteBtn.setText("Xóa");
        deleteBtn.setMaximumSize(new java.awt.Dimension(102, 22));
        deleteBtn.setMinimumSize(new java.awt.Dimension(102, 22));
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(editBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(backBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(exportBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(deleteBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(deleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(editBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(exportBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        showTbl.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        showTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Loại", "Tên hàng hóa", "Mã hàng", "Giá nhập", "Số lượng tồn", "Ngày nhập"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(showTbl);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 742, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(112, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void editBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editBtnActionPerformed
        selectedIndex = showTbl.getSelectedRow();
        if(DanhSachQuanLy.list.size() == 0) {
            JOptionPane.showMessageDialog(rootPane,
                "Hãy nhập thêm hàng hóa rồi sửa!");
        } else if(selectedIndex == -1) {
            JOptionPane.showMessageDialog(rootPane,
                "Hãy chọn dòng hàng hóa cần sửa rồi ấn Sửa!");
        } else { // chon dong can sua va nhan nut
            EditFrm editFrm = new EditFrm(DanhSachQuanLy.list.get(selectedIndex).getSerialString());
            editFrm.setEditData(DanhSachQuanLy.list.get(selectedIndex));
            editFrm.setVisible(true);
            dispose();
        }// TODO add your handling code here:
    }//GEN-LAST:event_editBtnActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        dispose();// TODO add your handling code here:
    }//GEN-LAST:event_backBtnActionPerformed

    private void exportBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportBtnActionPerformed
        selectedIndex = showTbl.getSelectedRow();
        if(DanhSachQuanLy.list.size() == 0) {
            JOptionPane.showMessageDialog(rootPane,
                "Hãy nhập thêm hàng hóa rồi Xuất kho!!!");
        } else if(selectedIndex == -1) {
            JOptionPane.showMessageDialog(rootPane,
                "Hãy chọn dòng hàng hóa cần xuất rồi ấn Xuất kho!!!");
        } else { // chon dong can sua va nhan nut
            ExportFrm exportFrm = new ExportFrm(DanhSachQuanLy.list.get(selectedIndex).getSerialString());
            exportFrm.setExportData(DanhSachQuanLy.list.get(selectedIndex));
            exportFrm.setVisible(true);
            dispose();
        }// TODO add your handling code here:
    }//GEN-LAST:event_exportBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        selectedIndex = showTbl.getSelectedRow();
        if(DanhSachQuanLy.list.size() == 0) {
            JOptionPane.showMessageDialog(rootPane,
                "Hãy nhập thêm hàng hóa rồi sửa!");
        } else if(selectedIndex == -1) {
            JOptionPane.showMessageDialog(rootPane,
                "Hãy chọn dòng hàng hóa muốn xóa rồi Ấn Xóa!!!");
        } else { // chon dong can sua va nhan nut
            int click = JOptionPane.showConfirmDialog(rootPane, "Bạn chọn xóa hàng hóa này!!!");
            if(click == JOptionPane.YES_OPTION);
            DanhSachQuanLy.list.remove(DanhSachQuanLy.list.get(selectedIndex));
            JOptionPane.showMessageDialog(rootPane, "Xóa thành công!!!");
            fillToTable(min, max);
        }
    }//GEN-LAST:event_deleteBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SearchFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SearchFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SearchFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SearchFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SearchFrm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JButton editBtn;
    private javax.swing.JButton exportBtn;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable showTbl;
    // End of variables declaration//GEN-END:variables

    private void fillToTable(long min, long max) {
        tblModel.setRowCount(0);
        for (Stuff stuff : DanhSachQuanLy.list) {
            if(stuff.getImportPrice() >= min && stuff.getImportPrice() <= max) {
                Object[] rowData = {stuff.getType(),stuff.getName(),stuff.getSerialString(),stuff.getImportPriceString(),stuff.getInventoryString(),stuff.getImportDateString()};
                tblModel.addRow(rowData);
            }
        }
        tblModel.fireTableDataChanged();
    }
    
    private void fillToTable(Date oldDate, Date lastDate) {
        tblModel.setRowCount(0);
        for (Stuff stuff : DanhSachQuanLy.list) {
            if(stuff.getImportDate().compareTo(oldDate) >= 0 && stuff.getImportDate().compareTo(lastDate) <= 0) {
                Object[] rowData = {stuff.getType(),stuff.getName(),stuff.getSerialString(),stuff.getImportPriceString(),stuff.getInventoryString(),stuff.getImportDateString()};
                tblModel.addRow(rowData);
            }
        }
        tblModel.fireTableDataChanged();
    }
    
    private void fillFoodToTable() {
        tblModel.setRowCount(0);
        for (Stuff stuff : DanhSachQuanLy.list) {
            if(stuff instanceof Food) {
                Object[] rowData = {stuff.getType(),stuff.getName(),stuff.getSerialString(),stuff.getImportPriceString(),stuff.getInventoryString(),stuff.getImportDateString()};
                tblModel.addRow(rowData);
            }
        }
        tblModel.fireTableDataChanged();
    }
    
    private void fillCeramicToTable() {
        tblModel.setRowCount(0);
        for (Stuff stuff : DanhSachQuanLy.list) {
            if(stuff instanceof Ceramic) {
                Object[] rowData = {stuff.getType(),stuff.getName(),stuff.getSerialString(),stuff.getImportPriceString(),stuff.getInventoryString(),stuff.getImportDateString()};
                tblModel.addRow(rowData);
            }
        }
        tblModel.fireTableDataChanged();
    }
    
    private void fillElectronicToTable() {
        tblModel.setRowCount(0);
        for (Stuff stuff : DanhSachQuanLy.list) {
            if(stuff instanceof Electronic) {
                Object[] rowData = {stuff.getType(),stuff.getName(),stuff.getSerialString(),stuff.getImportPriceString(),stuff.getInventoryString(),stuff.getImportDateString()};
                tblModel.addRow(rowData);
            }
        }
        tblModel.fireTableDataChanged();
    }
}
